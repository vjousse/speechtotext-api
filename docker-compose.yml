version: '3.8'
services:

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./public:/public
      - ./config/nginx:/etc/nginx/conf.d
      #- ./config/certbot/conf:/etc/letsencrypt  #for SSL purpose
      #- ./config/certbot/www:/var/www/certbot   #for SSL purpose
      - ./access.log:/var/log/nginx
      - ./dist:/dist
      - static-assets:/assets
      - uploads:/uploads
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - web

  db:
    image: postgres:13-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - 5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}

  web:
    build: .
    restart: always
    volumes:
      - .:/speechtotext-api
      - ./dist:/dist
      - static-assets:/assets
      - uploads:/speechtotext-api/uploads
      #- ~/.aws/:/app/.aws:ro    #for AWS S3 access purpose
    env_file: .env               #currently unused
    command: bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; uvicorn app.main:app --reload --reload-dir app --host 0.0.0.0'
    environment:
      - DB_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - REDIS_HOST=redis
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    depends_on:
      - db

  redis:
    image: "redis:alpine"

    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  static-assets:
  uploads:
  redis_data:
